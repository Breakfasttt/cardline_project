// Generated by Haxe 3.4.0
#ifndef INCLUDED_source_data_card_TLCard
#define INCLUDED_source_data_card_TLCard

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS3(source,data,card,TLCard)

namespace source{
namespace data{
namespace card{


class HXCPP_CLASS_ATTRIBUTES TLCard_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TLCard_obj OBJ_;
		TLCard_obj();

	public:
		enum { _hx_ClassId = 0x1716817d };

		void __construct(::String name,int year);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="source.data.card.TLCard")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"source.data.card.TLCard"); }
		static hx::ObjectPtr< TLCard_obj > __new(::String name,int year);
		static hx::ObjectPtr< TLCard_obj > __alloc(hx::Ctx *_hx_ctx,::String name,int year);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TLCard_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("TLCard","\x68","\xaf","\x01","\x85"); }

		 ::flixel::FlxSprite skin;
		::String name;
		int year;
		void release();
		::Dynamic release_dyn();

};

} // end namespace source
} // end namespace data
} // end namespace card

#endif /* INCLUDED_source_data_card_TLCard */ 
