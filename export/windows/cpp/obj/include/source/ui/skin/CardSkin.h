// Generated by Haxe 3.4.0
#ifndef INCLUDED_source_ui_skin_CardSkin
#define INCLUDED_source_ui_skin_CardSkin

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_flixel_group_FlxTypedGroup
#include <flixel/group/FlxTypedGroup.h>
#endif
HX_DECLARE_CLASS1(flixel,FlxBasic)
HX_DECLARE_CLASS1(flixel,FlxObject)
HX_DECLARE_CLASS1(flixel,FlxSprite)
HX_DECLARE_CLASS2(flixel,group,FlxTypedGroup)
HX_DECLARE_CLASS2(flixel,text,FlxText)
HX_DECLARE_CLASS2(flixel,util,IFlxDestroyable)
HX_DECLARE_CLASS3(source,ui,skin,CardSkin)

namespace source{
namespace ui{
namespace skin{


class HXCPP_CLASS_ATTRIBUTES CardSkin_obj : public  ::flixel::group::FlxTypedGroup_obj
{
	public:
		typedef  ::flixel::group::FlxTypedGroup_obj super;
		typedef CardSkin_obj OBJ_;
		CardSkin_obj();

	public:
		enum { _hx_ClassId = 0x0ede2d9d };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="source.ui.skin.CardSkin")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"source.ui.skin.CardSkin"); }
		static hx::ObjectPtr< CardSkin_obj > __new();
		static hx::ObjectPtr< CardSkin_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CardSkin_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("CardSkin","\x8d","\x44","\xc5","\x19"); }

		static void __boot();
		static int m_cardWidth;
		static int m_cardHeight;
		 ::flixel::FlxSprite m_background;
		 ::flixel::text::FlxText m_titleTxt;
		 ::flixel::text::FlxText m_yearTxt;
		bool m_onDrag;
		int m_mouseOffsetX;
		int m_mouseOffsetY;
		bool isVisible;
		int depth;
		void update(Float elapsed);

		void setText(::String name,::String year);
		::Dynamic setText_dyn();

		void updateTextPosition();
		::Dynamic updateTextPosition_dyn();

		void onMouseDown( ::flixel::FlxSprite item);
		::Dynamic onMouseDown_dyn();

		void onMouseUp( ::flixel::FlxSprite item);
		::Dynamic onMouseUp_dyn();

		void startDrag();
		::Dynamic startDrag_dyn();

		void stopDrag();
		::Dynamic stopDrag_dyn();

		void onDrag();
		::Dynamic onDrag_dyn();

		void flip();
		::Dynamic flip_dyn();

		void setVisible(bool vis);
		::Dynamic setVisible_dyn();

};

} // end namespace source
} // end namespace ui
} // end namespace skin

#endif /* INCLUDED_source_ui_skin_CardSkin */ 
