// Generated by Haxe 3.4.0
#ifndef INCLUDED_data_card_CardsExtension
#define INCLUDED_data_card_CardsExtension

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(data,card,CardsExtension)
HX_DECLARE_CLASS3(source,data,card,TLCard)

namespace data{
namespace card{


class HXCPP_CLASS_ATTRIBUTES CardsExtension_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef CardsExtension_obj OBJ_;
		CardsExtension_obj();

	public:
		enum { _hx_ClassId = 0x064368da };

		void __construct(::String name,::String JsonFilename,::String __o_Jsonfilepath);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="data.card.CardsExtension")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"data.card.CardsExtension"); }
		static hx::ObjectPtr< CardsExtension_obj > __new(::String name,::String JsonFilename,::String __o_Jsonfilepath);
		static hx::ObjectPtr< CardsExtension_obj > __alloc(hx::Ctx *_hx_ctx,::String name,::String JsonFilename,::String __o_Jsonfilepath);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~CardsExtension_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("CardsExtension","\x7c","\x62","\xc4","\xe7"); }

		::String name;
		::String m_extentionJsonFilePath;
		::String m_extentionJsonFileName;
		::String m_fullpath;
		::String m_rawData;
		::Array< ::Dynamic> m_allCardData;
		void loadRawData();
		::Dynamic loadRawData_dyn();

		void parseRawData();
		::Dynamic parseRawData_dyn();

		void init();
		::Dynamic init_dyn();

		void release();
		::Dynamic release_dyn();

		int getNbrCard();
		::Dynamic getNbrCard_dyn();

		 ::source::data::card::TLCard getTLCard(int cardIndex);
		::Dynamic getTLCard_dyn();

};

} // end namespace data
} // end namespace card

#endif /* INCLUDED_data_card_CardsExtension */ 
